// ◮◮◮ GENERATED BY AURORA ◮◮◮
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model BankAccount {
  id          String   @id @default(uuid())
  bank_code   String
  agency      String
  account     String
  check_digit String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  user        User     @relation(fields: [user_id], references: [id])
  user_id     String

  @@map("bank_accounts")
}

model User {
  id             String             @id @default(uuid())
  refreshTokens  UserRefreshToken[]
  name           String
  email          String
  cpf            String
  phone          String
  birthDate      DateTime
  nationality    String
  monthly_income Float
  occupation     String
  pep            Boolean?
  password       String
  created_at     DateTime           @default(now())
  updated_at     DateTime           @updatedAt
  bank_accounts  Document[]

  @@map("users")
  BankAccount BankAccount[]
}

model Document {
  id                String   @id @default(uuid())
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt
  type              DocType
  issuing_authority String
  number            String
  expiration_date   DateTime
  user              User     @relation(fields: [user_id], references: [id])
  user_id           String
  // pictures
  front             String
  back              String?

  @@map("documents")
}

model UserRefreshToken {
  id             String   @id @default(uuid())
  refreshToken   String
  userId         String
  user           User     @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  used           Boolean  @default(false)
  expirationDate DateTime
  createdAt      DateTime @default(now())

  @@unique([userId, refreshToken])
  @@map("user_refresh_tokens")
<<<<<<< HEAD
=======
}

enum DocType {
  CPF
  RG
  PASSPORT
>>>>>>> f6065eb1b93ecfa1f6e78181bb81b76cd508ffab
}